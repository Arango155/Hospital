--tabla


CREATE SEQUENCE "ID_SEQUENCE" 
    MINVALUE 1 
    MAXVALUE 9999999999999999999999999999 
    INCREMENT BY 1 
    START WITH 6 
    NOCACHE 
    NOORDER 
    NOCYCLE 
    NOKEEP 
    NOSCALE 
    GLOBAL;

CREATE TABLE "ASIGNACIONESDOCTOR" (
    "ASIGNACIONID" NUMBER DEFAULT "ID_SEQUENCE"."NEXTVAL",
    "DPI" NUMBER,
    "DOCTORID" NUMBER,
    "FECHAASIGNACION" DATE
);

CREATE TABLE "CAMAS" (
    "CAMAID" NUMBER DEFAULT "ID_SEQUENCE"."NEXTVAL",
    "HABITACIONID" NUMBER,
    "NUMEROCAMA" VARCHAR2(10 BYTE),
    "ESTADO" VARCHAR2(20 BYTE)
);

CREATE TABLE "DOCTORES" (
    "DOCTORID" NUMBER DEFAULT "ID_SEQUENCE"."NEXTVAL",
    "NOMBRE" VARCHAR2(100 BYTE),
    "ESPECIALIDADID" NUMBER
);

CREATE TABLE "ESPECIALIDADES" (
    "ESPECIALIDADID" NUMBER DEFAULT "ID_SEQUENCE"."NEXTVAL",
    "NOMBRE" VARCHAR2(100 BYTE)
);

CREATE TABLE "FACTURAS" (
    "FACTURAID" NUMBER DEFAULT "ID_SEQUENCE"."NEXTVAL",
    "DPI" NUMBER,
    "MONTO" NUMBER(10,2),
    "FECHAEMISION" DATE,
    "ESTADO" VARCHAR2(20 BYTE)
);

CREATE TABLE "HABITACIONES" (
    "HABITACIONID" NUMBER DEFAULT "ID_SEQUENCE"."NEXTVAL",
    "NUMEROHABITACION" VARCHAR2(10 BYTE),
    "TIPO" VARCHAR2(50 BYTE),
    "ESTADO" VARCHAR2(20 BYTE)
);

CREATE TABLE "MEDICAMENTOS" (
    "MEDICAMENTOID" NUMBER DEFAULT "ID_SEQUENCE"."NEXTVAL",
    "NOMBRE" VARCHAR2(100 BYTE),
    "DESCRIPCION" VARCHAR2(255 BYTE),
    "PRECIO" NUMBER(10,2),
    "CANTIDAD" NUMBER,
    "CANTIDADMINIMA" NUMBER
);

CREATE TABLE "PACIENTES" (
    "DPI" NUMBER,
    "NOMBRE" VARCHAR2(100 BYTE),
    "EDAD" NUMBER,
    "GENERO" VARCHAR2(10 BYTE),
    "FECHA_INGRESO" DATE
);

CREATE TABLE "PRESCRIPCIONES" (
    "PRESCRIPCIONID" NUMBER DEFAULT "ID_SEQUENCE"."NEXTVAL",
    "DPI" NUMBER,
    "MEDICAMENTOID" NUMBER,
    "CANTIDAD" NUMBER,
    "FECHA" DATE
);

CREATE TABLE "REGISTROALERTAS" (
    "NOMBRE" VARCHAR2(100 BYTE),
    "MEDICAMENTOID" NUMBER,
    "CANT_RESTANTE" NUMBER,
    "FECHA_ALERTA" DATE
);

CREATE TABLE "REGISTRO_SALIDAS_PACIENTES" (
    "DPI" NUMBER,
    "FECHA_SALIDA" TIMESTAMP (6)
);

CREATE TABLE "SERVICIOS" (
    "SERVICIOID" NUMBER DEFAULT "ID_SEQUENCE"."NEXTVAL",
    "NOMBRE" VARCHAR2(100 BYTE),
    "DESCRIPCION" VARCHAR2(255 BYTE),
    "COSTO" NUMBER(10,2)
);

CREATE TABLE "USERS" (
    "USERNAME" VARCHAR2(255 BYTE),
    "PASSWORD" VARCHAR2(255 BYTE),
    "USER_TYPE" VARCHAR2(50 BYTE)
);



-- Adding primary and foreign key constraints

-- Table "ASIGNACIONESDOCTOR"
ALTER TABLE "ASIGNACIONESDOCTOR"
ADD CONSTRAINT PK_ASIGNACIONESDOCTOR PRIMARY KEY ("ASIGNACIONID");

-- Table "CAMAS"
ALTER TABLE "CAMAS"
ADD CONSTRAINT PK_CAMAS PRIMARY KEY ("CAMAID");

-- Table "DOCTORES"
ALTER TABLE "DOCTORES"
ADD CONSTRAINT PK_DOCTORES PRIMARY KEY ("DOCTORID");

-- Table "ESPECIALIDADES"
ALTER TABLE "ESPECIALIDADES"
ADD CONSTRAINT PK_ESPECIALIDADES PRIMARY KEY ("ESPECIALIDADID");

-- Table "FACTURAS"
ALTER TABLE "FACTURAS"
ADD CONSTRAINT PK_FACTURAS PRIMARY KEY ("FACTURAID");

-- Table "HABITACIONES"
ALTER TABLE "HABITACIONES"
ADD CONSTRAINT PK_HABITACIONES PRIMARY KEY ("HABITACIONID");

-- Table "MEDICAMENTOS"
ALTER TABLE "MEDICAMENTOS"
ADD CONSTRAINT PK_MEDICAMENTOS PRIMARY KEY ("MEDICAMENTOID");

-- Table "PACIENTES"
ALTER TABLE "PACIENTES"
ADD CONSTRAINT PK_PACIENTES PRIMARY KEY ("DPI");

-- Table "PRESCRIPCIONES"
ALTER TABLE "PRESCRIPCIONES"
ADD CONSTRAINT PK_PRESCRIPCIONES PRIMARY KEY ("PRESCRIPCIONID");

-- Table "REGISTROALERTAS"
-- Since there's no apparent primary key, assuming "NOMBRE" + "MEDICAMENTOID" as a composite primary key
ALTER TABLE "REGISTROALERTAS"
ADD CONSTRAINT PK_REGISTROALERTAS PRIMARY KEY ("NOMBRE", "MEDICAMENTOID");

-- Table "REGISTRO_SALIDAS_PACIENTES"
-- Assuming "DPI" as the primary key
ALTER TABLE "REGISTRO_SALIDAS_PACIENTES"
ADD CONSTRAINT PK_REGISTRO_SALIDAS_PACIENTES PRIMARY KEY ("DPI");

-- Adding foreign key constraints

-- Table "ASIGNACIONESDOCTOR" - referencing "PACIENTES"
ALTER TABLE "ASIGNACIONESDOCTOR"
ADD CONSTRAINT FK_ASIGNACIONESDOCTOR_PACIENTES FOREIGN KEY ("DPI")
REFERENCES "PACIENTES"("DPI");

-- Table "ASIGNACIONESDOCTOR" - referencing "DOCTORES"
ALTER TABLE "ASIGNACIONESDOCTOR"
ADD CONSTRAINT FK_ASIGNACIONESDOCTOR_DOCTORES FOREIGN KEY ("DOCTORID")
REFERENCES "DOCTORES"("DOCTORID");

-- Table "CAMAS" - referencing "HABITACIONES"
ALTER TABLE "CAMAS"
ADD CONSTRAINT FK_CAMAS_HABITACIONES FOREIGN KEY ("HABITACIONID")
REFERENCES "HABITACIONES"("HABITACIONID");

-- Table "DOCTORES" - referencing "ESPECIALIDADES"
ALTER TABLE "DOCTORES"
ADD CONSTRAINT FK_DOCTORES_ESPECIALIDADES FOREIGN KEY ("ESPECIALIDADID")
REFERENCES "ESPECIALIDADES"("ESPECIALIDADID");

-- Table "FACTURAS" - referencing "PACIENTES"
ALTER TABLE "FACTURAS"
ADD CONSTRAINT FK_FACTURAS_PACIENTES FOREIGN KEY ("DPI")
REFERENCES "PACIENTES"("DPI");

-- Table "PRESCRIPCIONES" - referencing "PACIENTES"
ALTER TABLE "PRESCRIPCIONES"
ADD CONSTRAINT FK_PRESCRIPCIONES_PACIENTES FOREIGN KEY ("DPI")
REFERENCES "PACIENTES"("DPI");

-- Table "PRESCRIPCIONES" - referencing "MEDICAMENTOS"
ALTER TABLE "PRESCRIPCIONES"
ADD CONSTRAINT FK_PRESCRIPCIONES_MEDICAMENTOS FOREIGN KEY ("MEDICAMENTOID")
REFERENCES "MEDICAMENTOS"("MEDICAMENTOID");

-- Table "REGISTROALERTAS" - referencing "MEDICAMENTOS"
ALTER TABLE "REGISTROALERTAS"
ADD CONSTRAINT FK_REGISTROALERTAS_MEDICAMENTOS FOREIGN KEY ("MEDICAMENTOID")
REFERENCES "MEDICAMENTOS"("MEDICAMENTOID");




--TRIGGERS

--INGRESO DE PACIENTE 

CREATE OR REPLACE TRIGGER INGRESO_PACIENTE
BEFORE INSERT ON Pacientes
FOR EACH ROW
BEGIN
 IF INSERTING THEN
 :NEW.Fecha_Ingreso := SYSDATE; -- Registra la fecha de ingreso
 END IF;
END;
/

--TRIGGER PARA BITACORA

create or replace TRIGGER BITACORA
BEFORE DELETE ON PACIENTES
FOR EACH ROW
BEGIN
  INSERT INTO REGISTRO_SALIDAS_PACIENTES (DPI, FECHA_SALIDA)
  VALUES (:OLD.DPI, SYSDATE); 
END;


--FECHA PRESCRIPCION

CREATE OR REPLACE NONEDITIONABLE TRIGGER FECHA_PRESCRIPCION
BEFORE INSERT ON PRESCRIPCIONES
FOR EACH ROW
BEGIN
    :NEW.FECHA := SYSDATE; -- Set the current date
END;
/


--Ingreso Factura

CREATE OR REPLACE NONEDITIONABLE TRIGGER INGRESO_FACTURA
BEFORE INSERT ON FACTURAS
FOR EACH ROW
BEGIN
    :NEW.FECHAEMISION := SYSDATE; -- Set the current date
    :NEW.ESTADO := 'Pendiente'; -- Set the default value for ESTADO
END;
/

--PROCEDIMIENTOS

--ASIGNAR DOCTOR A PACIENTE

CREATE OR REPLACE PROCEDURE AsignarDoctorAPaciente(
    p_DPI IN NUMBER,
    p_DoctorID IN NUMBER
) AS
BEGIN
    -- Insertar la asignación del doctor al paciente
    INSERT INTO ASIGNACIONESDOCTOR (DPI, DOCTORID, FECHAASIGNACION)
    VALUES (p_DPI, p_DoctorID, SYSDATE);

    -- Confirmar la transacción
    COMMIT;
END;
/